*{
    margin: 0;
    padding: 0;
    box-sizing: border-box; /*dimensionamento de caixa
    O box-sizing com o valor border-box faz com que o 
    navegador não calcule a dimensão de um elemento somando 
    bordas e margens com altura e largura
    */
}

:root { /*campo para declaração de variáveis*/
    --ch2-caed:rgb(235, 230, 176);
    --hp-paragraf:rgb(240, 170, 48);
    --bd-body:rgb(60, 5, 23);
    --ff-heading: 'Epilogue', sans-serif;
    --ff-texting: 'Open sans', sans-serif;
    
    --hue:250;
    --br-primary: hsl(var(--hue), 22%, 20%); /*Varia de 0 a 360 ou 0% a 100% */
    --fc-primary: hsl(var(--hue), 0%, 100%);
    --fc-secondary: hsl(var(--hue), 50%, 80%);

    font-size: 62.5%;
    --fs-body: 1.6rem;
    --fs-heading: clamp(4rem, 1rem + 5vw, 5.6rem);/*https://www.avmakers.com.br/blog/o-que-e-modo-de-cor#:~:text=%C3%A9%20o%20HSL.-,HSL,cor%20e%20a%20sua%20lumin%C3%A2ncia.*/
    --fs-heading-sm: clamp(3rem, 0.5rem + 3vw, 4rem);
    /*O clamp() é uma feature recente(recurso recente) do CSS que permite definir
     um valor médio, entre um mínimo e máximo 
    definido para um tamanho de fonte, por exemplo.*/
}

body {
    font-family: var(--ff-texting);

    background-color: var(--bd-body);
    color: var(--fc-primary);
    font-size: var(--fs-body);

}
/*REM APROXIMADAMENTE 10 PX*/
.page{

    max-width: clamp(33rem, 30rem + 60vw, 117rem); /*vw significam viewport, sendo a primeira para altura e a segunda para largura*/
    padding: 0 5rem;
    margin: 0 auto;
}




img{
    width: 100%;
    height: auto;
}

header {
    margin-top: 10rem 0 8rem;
    font-family: var(--ff-heading);
    animation: topdown 700ms;
    text-align: center;
}

header p {
    
    color: var(--hp-paragraf);
    text-transform: uppercase;
    letter-spacing: 3px; /*Espaçamento entre letras*/
    margin-bottom: 1.7rem;
    line-height: 3.2rem;
    font-weight: 400;
}

header h1{
    font-weight: 800;
    font-size: var(--fs-heading);
    line-height: 4.8rem;
}

main{
    display: grid;
    gap: 3.2rem;
    animation: downtop 700ms 350ms backwards;/*downtop -> para baixo*/
    padding-bottom: 10rem;
}

.card {
    position: relative;/*https://developer.mozilla.org/pt-BR/docs/Web/CSS/position*/
    font-family: var(--fs-heading);
}

.card img {
    height: 41.6rem;
    object-fit: cover; /*Object-fit é utilizada para especificar como um objeto (imagem, vídeo, iframe ou embed) deve ser redimensionado para se ajustar ao seu contêiner*/
    filter: brightness(0.5);/*brightness()
    O efeito obtido com aplicação desta função de filtragem é o de aumentar ou diminuir o brilho da imagem.*/
    filter: saturate(1.5); /*REGULA A SATURAÇÃO*/
    border-radius: 6px;
    transition: all 200ms;


    /*
    
Quais os valores da propriedade transition?
Definindo a qual propriedade a transição será aplicada: transition-property. ...
Definindo a duração da transição: transition-duration. ...
Definindo a curva de velocidade do efeito de transição: transition-timing-function. ...
Definindo quando a transição começa: transition-delay.

    */


}

.card img:hover{
    transform: scale(1.1);
    opacity: 0.4;
}

.card h2 {
    position: absolute;
    bottom: 5.2rem;
    left: 2.8rem;
    font-size: var(--fs-heading-sm);
    font-weight: 800;

    display: flex;
    flex-direction: column;
    gap:2.8rem;

}

.card h2 span {
    border-radius: 2rem;
    background-color:var(--ch2-caed);
    font-size: var(--fs-body);
    color: var(--fc-secondary-dark);
    font-weight: 400;
    padding: 0 1.6rem;
    height: 3.8rem;
    display: inline-flex;
    align-items: center;
    width: fit-content;
}



@keyframes topdown {
    0% {
        opacity: 0;
        transform: translateY(-15px);
    }

    100%{
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes downtop {
    0%{
        opacity: 0;
        transform: translateY(15px);
    }

    100%{
        opacity: 1;
        transform: translateY(0);
    }
}

@media (min-width:700px){
   

    /*.page{
        max-width: 117rem;
        padding: 0 5rem;
    }*/

    main {grid-template-columns: 1fr 1fr;
    }
}

@media (min-width:930px){


    main {
        grid-template-areas: "A B B" "C C D";
    }
    main div:nth-child(1){
        grid-area:A;
    }
    main div:nth-child(2){
        grid-area: B;
    }

    main div:nth-child(3){
        grid-area: C;
    }

    main div:nth-child(4){
        grid-area: D;
    }
}